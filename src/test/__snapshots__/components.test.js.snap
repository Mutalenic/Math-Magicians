// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test the components Calculator render test 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="container2"
        >
          <h2>
            Hai there! Lets do some Math
          </h2>
        </div>
        <div
          class="layout"
        >
          <div
            class="print"
          >
            <h3
              class="printout"
            >
              0
            </h3>
          </div>
          <div
            class="keyboard"
          >
            <button
              class="designcolor"
              id="Clear"
              type="button"
            >
              AC
            </button>
            <button
              class="designcolor"
              id="plusMinus"
              type="button"
            >
              +/-
            </button>
            <button
              class="designcolor"
              id="percentage"
              type="button"
            >
              %
            </button>
            <button
              class="designcolor2"
              id="divide"
              type="button"
            >
              ÷
            </button>
            <button
              class="designcolor"
              id="seven"
              type="button"
            >
              7
            </button>
            <button
              class="designcolor"
              id="eight"
              type="button"
            >
              8
            </button>
            <button
              class="designcolor"
              id="nine"
              type="button"
            >
              9
            </button>
            <button
              class="designcolor2"
              id="multiply"
              type="button"
            >
              x
            </button>
            <button
              class="designcolor"
              id="six"
              type="button"
            >
              6
            </button>
            <button
              class="designcolor"
              id="five"
              type="button"
            >
              5
            </button>
            <button
              class="designcolor"
              id="four"
              type="button"
            >
              4
            </button>
            <button
              class="designcolor2"
              id="minus"
              type="button"
            >
              -
            </button>
            <button
              class="designcolor"
              id="three"
              type="button"
            >
              3
            </button>
            <button
              class="designcolor"
              id="two"
              type="button"
            >
              2
            </button>
            <button
              class="designcolor"
              id="one"
              type="button"
            >
              1
            </button>
            <button
              class="designcolor2"
              id="plus"
              type="button"
            >
              +
            </button>
            <button
              class="designcolor"
              id="zero"
              type="button"
            >
              0
            </button>
            <button
              class="designcolor"
              id="decimalpoint"
              type="button"
            >
              ⋅
            </button>
            <button
              class="designcolor2"
              id="equals"
              type="button"
            >
              =
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="container2"
      >
        <h2>
          Hai there! Lets do some Math
        </h2>
      </div>
      <div
        class="layout"
      >
        <div
          class="print"
        >
          <h3
            class="printout"
          >
            0
          </h3>
        </div>
        <div
          class="keyboard"
        >
          <button
            class="designcolor"
            id="Clear"
            type="button"
          >
            AC
          </button>
          <button
            class="designcolor"
            id="plusMinus"
            type="button"
          >
            +/-
          </button>
          <button
            class="designcolor"
            id="percentage"
            type="button"
          >
            %
          </button>
          <button
            class="designcolor2"
            id="divide"
            type="button"
          >
            ÷
          </button>
          <button
            class="designcolor"
            id="seven"
            type="button"
          >
            7
          </button>
          <button
            class="designcolor"
            id="eight"
            type="button"
          >
            8
          </button>
          <button
            class="designcolor"
            id="nine"
            type="button"
          >
            9
          </button>
          <button
            class="designcolor2"
            id="multiply"
            type="button"
          >
            x
          </button>
          <button
            class="designcolor"
            id="six"
            type="button"
          >
            6
          </button>
          <button
            class="designcolor"
            id="five"
            type="button"
          >
            5
          </button>
          <button
            class="designcolor"
            id="four"
            type="button"
          >
            4
          </button>
          <button
            class="designcolor2"
            id="minus"
            type="button"
          >
            -
          </button>
          <button
            class="designcolor"
            id="three"
            type="button"
          >
            3
          </button>
          <button
            class="designcolor"
            id="two"
            type="button"
          >
            2
          </button>
          <button
            class="designcolor"
            id="one"
            type="button"
          >
            1
          </button>
          <button
            class="designcolor2"
            id="plus"
            type="button"
          >
            +
          </button>
          <button
            class="designcolor"
            id="zero"
            type="button"
          >
            0
          </button>
          <button
            class="designcolor"
            id="decimalpoint"
            type="button"
          >
            ⋅
          </button>
          <button
            class="designcolor2"
            id="equals"
            type="button"
          >
            =
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Test the components test render Home 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="container"
      >
        <h1>
          Welcome To Our Page
        </h1>
        <p>
          Mathematics is an area of knowledge, which includes the study of such topics as numbers, formulas and related structures, shapes and spaces in which they are contained, and quantities and their changes.
        </p>
        <p>
           
          There is no general consensus about its exact scope or epistemological status. Wikipedia.
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="container"
    >
      <h1>
        Welcome To Our Page
      </h1>
      <p>
        Mathematics is an area of knowledge, which includes the study of such topics as numbers, formulas and related structures, shapes and spaces in which they are contained, and quantities and their changes.
      </p>
      <p>
         
        There is no general consensus about its exact scope or epistemological status. Wikipedia.
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Test the components test render Quotes 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="container"
      >
        <h1>
          Math Quote
        </h1>
        <p>
          We will always have STEM with us. Some things will drop out of the public eye and go away,
          <br />
          but there will always be science, engineering, and technology.
          <br />
          And there will always, always be mathematics.
          <br />
          — Katherine Johnson, African-American mathematician
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="container"
    >
      <h1>
        Math Quote
      </h1>
      <p>
        We will always have STEM with us. Some things will drop out of the public eye and go away,
        <br />
        but there will always be science, engineering, and technology.
        <br />
        And there will always, always be mathematics.
        <br />
        — Katherine Johnson, African-American mathematician
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
